/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// Role is the Schema for the roles API
// +k8s:openapi-gen=true
// +kubebuilder:resource:shortName=ir
type IamRole struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Definition   IamRoleDefinition   `json:"definition,omitempty"`
}

// IamRoleDefinition defines the AWS IAM role
type IamRoleDefinition struct {
	// RoleArn is the Amazon Resource Name (ARN) of the role to assume.
	RoleArn string `json:"roleARN"`

	// ExternalId is a unique identifier that might be required when you assume a role in another account
	ExternalId *string `json:"providerID,omitempty"`
}

func (in *IamRole) DeepCopy() *IamRole {
	if in == nil {
		return nil
	}
	out := new(Machine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IamRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}


// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IamRoleDefinition) DeepCopyInto(out *IamRoleDefinition) {
	*out = *in
	if in.ExternalId != nil {
		in, out := &in.ExternalId, &out.ExternalId
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IamRole) DeepCopyInto(out *IamRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Definition.DeepCopyInto(&out.Definition)
	return
}



func init() {
	SchemeBuilder.Register(&IamRole{})
}
